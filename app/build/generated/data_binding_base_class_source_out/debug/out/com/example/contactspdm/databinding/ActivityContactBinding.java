// Generated by view binder compiler. Do not edit!
package com.example.contactspdm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.contactspdm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContactBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText addressEt;

  @NonNull
  public final EditText emailEt;

  @NonNull
  public final EditText nameEt;

  @NonNull
  public final EditText phoneEt;

  @NonNull
  public final Button saveBt;

  @NonNull
  public final ToolbarBinding toolbarIn;

  private ActivityContactBinding(@NonNull ConstraintLayout rootView, @NonNull EditText addressEt,
      @NonNull EditText emailEt, @NonNull EditText nameEt, @NonNull EditText phoneEt,
      @NonNull Button saveBt, @NonNull ToolbarBinding toolbarIn) {
    this.rootView = rootView;
    this.addressEt = addressEt;
    this.emailEt = emailEt;
    this.nameEt = nameEt;
    this.phoneEt = phoneEt;
    this.saveBt = saveBt;
    this.toolbarIn = toolbarIn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressEt;
      EditText addressEt = ViewBindings.findChildViewById(rootView, id);
      if (addressEt == null) {
        break missingId;
      }

      id = R.id.emailEt;
      EditText emailEt = ViewBindings.findChildViewById(rootView, id);
      if (emailEt == null) {
        break missingId;
      }

      id = R.id.nameEt;
      EditText nameEt = ViewBindings.findChildViewById(rootView, id);
      if (nameEt == null) {
        break missingId;
      }

      id = R.id.phoneEt;
      EditText phoneEt = ViewBindings.findChildViewById(rootView, id);
      if (phoneEt == null) {
        break missingId;
      }

      id = R.id.saveBt;
      Button saveBt = ViewBindings.findChildViewById(rootView, id);
      if (saveBt == null) {
        break missingId;
      }

      id = R.id.toolbarIn;
      View toolbarIn = ViewBindings.findChildViewById(rootView, id);
      if (toolbarIn == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbarIn = ToolbarBinding.bind(toolbarIn);

      return new ActivityContactBinding((ConstraintLayout) rootView, addressEt, emailEt, nameEt,
          phoneEt, saveBt, binding_toolbarIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
